version: '3'
services:

  #Api Service
  api:
    build:
      context: docker/api
    image: digitalocean.com/php
    container_name: shop-api
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_TAGS: dev
    working_dir: /var/www/sites/shop/
    volumes:
      - ./api/:/var/www/sites/shop/
      - ./docker/api/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Frontend Service
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: shop-frontend
    restart: unless-stopped
    tty: true
    stdin_open: true
    working_dir: /app
    volumes:
      - ./frontend/:/app/
      - "/app/node_modules"
    ports:
      - '8182:8080'
    networks:
      - app-network

  #Nginx for api Service
  api-nginx:
    image: nginx:alpine
    container_name: api-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8282:80"
    volumes:
      - ./api/:/var/www/sites/shop/
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: shop-db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel_shop
      MYSQL_ROOT_PASSWORD: laravel_shop
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Broker message Service
#  rabbitmq:
#    image: rabbitmq:3.7.17-management
#    container_name: rabbitmq
#    environment:
#      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
#      RABBITMQ_DEFAULT_USER: "rabbitmq"
#      RABBITMQ_DEFAULT_PASS: "rabbitmq"
#      RABBITMQ_DEFAULT_VHOST: "/"
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    volumes:
#      - ./docker/rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins
#    networks:
#      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
